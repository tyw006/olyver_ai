# This workflow will build and push a new container image to Amazon ECR

name: Deploy to Amazon ECR

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'debug'
        type: choice
        options:
        - info
        - warning
        - debug
        
  push:
    branches: 
      -dev
    paths: 
      -'deploy-sagemaker/**'

env:
  AWS_REGION: us-east-2

jobs:
  build_image_push_to_ECR:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3 # This is so the worokflow will use this repository's code

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ACCOUNT_ID: ${{secrets.AWS_ACCOUNT_ID }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: latest
      run: |
        echo "start"
        ls
        pip install --upgrade --user awscli
        echo "Logging into AWS Elastic Container Registry."
        aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin 763104351884.dkr.ecr.us-east-2.amazonaws.com
        # logging into private ECR
        aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 187135372127.dkr.ecr.us-east-2.amazonaws.com
        ./build_and_push_image.sh sagemaker-d2-serve-weightlifting latest Dockerfile.serving us-east-2
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
